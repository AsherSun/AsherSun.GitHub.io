(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{564:function(t,v,a){"use strict";a.r(v);var _=a(4),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,a=t._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"实现一个spa应用路由功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现一个spa应用路由功能"}},[t._v("#")]),t._v(" 实现一个SPA应用路由功能")]),t._v(" "),a("p",[t._v("用来实现一个SPA应用路由功能，通过该文章可以学习到浏览器内置的两个API："),a("code",[t._v("history")]),t._v("和"),a("code",[t._v("location")]),t._v("以及了解目前流行框架中路由底层实现是如何实现的")]),t._v(" "),a("h2",{attrs:{id:"mpa-spa概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mpa-spa概念"}},[t._v("#")]),t._v(" MPA&SPA概念")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AsherSun/image-host/blog-img/20200607224533.png",alt:"MPA&SPA概念ß"}})]),t._v(" "),a("h2",{attrs:{id:"功能设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#功能设计"}},[t._v("#")]),t._v(" 功能设计")]),t._v(" "),a("p",[t._v("我们要实现一个无刷新跳转页面的功能，那么就需要了解相关前置的知识点。")]),t._v(" "),a("h3",{attrs:{id:"浏览器api介绍-history和location"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器api介绍-history和location"}},[t._v("#")]),t._v(" 浏览器API介绍："),a("code",[t._v("history")]),t._v("和"),a("code",[t._v("location")])]),t._v(" "),a("p",[t._v("浏览器的标签页历史会话功能是由"),a("code",[t._v("history")]),t._v(" 对象来实现和维护会话历史栈。"),a("code",[t._v("history")]),t._v(" 可以在"),a("code",[t._v("window")]),t._v("对象上访问，")]),t._v(" "),a("p",[a("code",[t._v("location")]),t._v("对象提供了对当前页面地址的一些信息。"),a("code",[t._v("location")]),t._v("可以在"),a("code",[t._v("window")]),t._v("对象访问，或者"),a("code",[t._v("document")]),t._v("对象上访问。"),a("code",[t._v("location")]),t._v("对象本身也提供了对浏览器会话历史的操作")]),t._v(" "),a("h3",{attrs:{id:"history介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#history介绍"}},[t._v("#")]),t._v(" "),a("code",[t._v("history")]),t._v("介绍")]),t._v(" "),a("h4",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("p",[a("code",[t._v("histro.lenght")]),t._v(" 只读属性")]),t._v(" "),a("p",[t._v("返回一个整数，该整数表示会话历史中元素的数目，包括当前加载的页。例如，在一个新的选项卡加载的一个页面中，这个属性返回1。")]),t._v(" "),a("p",[t._v("浏览器控制台测试："),a("code",[t._v("location.length")])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[a("code",[t._v("history")]),t._v("接口不继承任何方法。")]),t._v(" "),a("p",[a("code",[t._v("history.back()")]),t._v("： 返回上一页，用户可点击浏览器左上角的返回按钮模拟此方法。等价于"),a("code",[t._v("history.go(-1)")]),t._v("。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("当前六拉你去会话历史记录处于第一页时调用此方法没有效果，而且不会报错。")])]),t._v(" "),a("p",[a("code",[t._v("history.forward()")]),t._v(": 在浏览器历史记录里前往下一页，用户可点击浏览器左上角的前进按钮模拟此方法。等价于"),a("code",[t._v("history.go(1)")]),t._v("。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[t._v("当前浏览器历史栈处于最顶端时（当前页面处于最后一页时）调用此方法没有效果也不会报错。")])]),t._v(" "),a("p",[a("code",[t._v("history.go()")]),t._v(": 通过当前页面的相对位置从浏览器历史记录（会话记录）加载页面。比如：参数为-1的时候为上一页，参数为1的时候为下一页。当整数参数超出界限时或者调用没有参数的"),a("code",[t._v("go()")]),t._v("方法或者传的参数为无效参数时，没有任何效果也不会报错。")]),t._v(" "),a("p",[a("code",[t._v("history.pushState()")]),t._v(":按指定的名称和URL(如果提供该参数) 将数据push进会话历史栈，数据被DOM进行不透明处理；你可以指定任何可以被序列化的javascript对象")]),t._v(" "),a("p",[a("code",[t._v("history.replaceState()")]),t._v("：按指定的数据，名称和URL（如果提供该参数），更新历史栈上最新的入口。这个数据被DOM进行了不透明处理。你可以指定任何可以被序列化的javascript对象。")]),t._v(" "),a("h4",{attrs:{id:"事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")])])}),[],!1,null,null,null);v.default=s.exports}}]);