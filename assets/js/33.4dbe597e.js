(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{530:function(e,v,_){"use strict";_.r(v);var o=_(4),r=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"indexeddb踩坑指南"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#indexeddb踩坑指南"}},[e._v("#")]),e._v(" IndexedDB踩坑指南")]),e._v(" "),_("blockquote",[_("p",[e._v("IndexedDB 是一种底层 API，用于在客户端存储大量的结构化数据（也包括文件/二进制大型对象（blobs））")])]),e._v(" "),_("p",[_("strong",[e._v("什么场景下会使用？")])]),e._v(" "),_("ul",[_("li",[_("p",[e._v("异步调用的API")])]),e._v(" "),_("li",[_("p",[e._v("localStorage的限制")])]),e._v(" "),_("li",[_("p",[e._v("举一个最直观的🌰")]),e._v(" "),_("blockquote",[_("p",[_("strong",[e._v("印鸽照片冲印业务")])]),e._v(" "),_("p",[e._v("之前遇到一个反馈问题: 用户上传几百张图片，会有图片丢失的问题。该问题造成的原因可能是localStorage存储的大小限制导致了数据丢失。")]),e._v(" "),_("p",[e._v("而indexedDB从目前的结论中来看，存储的容量是大于localStorage的，应该不低于250MB。甚至在某些浏览器中无上限")])])])]),e._v(" "),_("h2",{attrs:{id:"兼容性如何"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#兼容性如何"}},[e._v("#")]),e._v(" 兼容性如何？")]),e._v(" "),_("blockquote",[_("p",[e._v("兼容性数据调查时间为"),_("strong",[e._v("2020-9-29")])])]),e._v(" "),_("p",[_("a",{attrs:{href:"https://caniuse.com/?search=IndexedDB",target:"_blank",rel:"noopener noreferrer"}},[e._v("canIuse?search=IndexedDB"),_("OutboundLink")],1)]),e._v(" "),_("p",[e._v('![image-20201129184710130](/Users/ashersun/Library/Application Support/typora-user-images/image-20201129184710130.png "CanIUse=IndexedDb")')]),e._v(" "),_("p",[_("a",{attrs:{href:"https://developer.apple.com/support/app-store/",target:"_blank",rel:"noopener noreferrer"}},[e._v("ios devices version"),_("OutboundLink")],1)]),e._v(" "),_("p",[e._v("![image-20201129185625615](/Users/ashersun/Library/Application Support/typora-user-images/image-20201129185625615.png)")]),e._v(" "),_("ol",[_("li",[e._v("上图可以看到，indexdbDB 在主流浏览器中的支持还是挺不错的(IE除外)。在安卓上，可以说是100%支持(远古时代的机器除外)")]),e._v(" "),_("li",[e._v("从图中可以看到在IOS中，10版本以下都会存在一些问题。再看下IOS目前系统的用户分布来看，有6%是未知版本系统，有可能是11、10。活着10以下")])]),e._v(" "),_("p",[_("strong",[e._v("兼容性总结:")])]),e._v(" "),_("p",[e._v("如果有项目中使用indexedDB操作，可以先统计下目前业务中ios系统版本的用户占比，看下ios10 以下的用户有多少，是否有必要出兼容方案等。")]),e._v(" "),_("h2",{attrs:{id:"api基本简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#api基本简介"}},[e._v("#")]),e._v(" API基本简介")]),e._v(" "),_("blockquote",[_("p",[e._v("indexedDB 使用索引实现对数据的高性能搜索。它不是SQL(关系型数据库), 而是类似NoSQL。")]),e._v(" "),_("p",[e._v("其实前端接触比较多的还是NoSQL，比如小程序云开发的存储方案、MongoDB。")])]),e._v(" "),_("ul",[_("li",[e._v("打开数据库("),_("code",[e._v("indexedDB.open(dbName, version)")]),e._v(") 返回 "),_("code",[e._v("IDRequest")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("idb.open")]),e._v("和"),_("code",[e._v("idb.deleteDatabase")]),e._v("都会返回"),_("code",[e._v("IDRequest")]),e._v("对象")]),e._v(" "),_("li",[_("code",[e._v("success")])]),e._v(" "),_("li",[_("code",[e._v("error")])]),e._v(" "),_("li",[_("code",[e._v("upgradeneeded")])]),e._v(" "),_("li",[e._v("...")])])]),e._v(" "),_("li",[e._v("数据库删除("),_("code",[e._v("indexedDB.deleteDatabase")]),e._v(")\n"),_("ul",[_("li",[_("code",[e._v("success")])]),e._v(" "),_("li",[_("code",[e._v("error")])]),e._v(" "),_("li",[e._v("删除不存在的数据并不会报错")])])]),e._v(" "),_("li",[_("code",[e._v("indexedDB.cmp(keyPath, keyPath)")]),e._v(" "),_("ul",[_("li",[e._v("比较传入的"),_("code",[e._v("keyPath")]),e._v("是否为相同的主键。"),_("code",[e._v("0")]),e._v("相同，"),_("code",[e._v("1")]),e._v("第一个keyPath大于第二个, "),_("code",[e._v("2")]),e._v("第一个keyPath小于第二个")]),e._v(" "),_("li",[e._v("不能用来比较任意JavaScript值，比如boolean、object。如果比较则报错")])])]),e._v(" "),_("li",[_("code",[e._v("IDBDatabase")]),e._v(" "),_("ul",[_("li",[e._v("在数据库"),_("code",[e._v("open")]),e._v("之后的"),_("code",[e._v("onsuccess")]),e._v("时间的"),_("code",[e._v("result")]),e._v("上拿到这个对象")]),e._v(" "),_("li",[e._v("后面的"),_("code",[e._v("CRUD")]),e._v("操作是在这个对象上进行操作的")]),e._v(" "),_("li",[_("code",[e._v("name")]),e._v("字符串，数据库名称")]),e._v(" "),_("li",[_("code",[e._v("version")]),e._v("整数，第一次创建时，该属性的值为"),_("code",[e._v("null")])]),e._v(" "),_("li",[_("code",[e._v("objectStoreNames")]),e._v(", "),_("code",[e._v("DOMStringList")]),e._v("对象(字符串集合)，包含当前数据库的所有"),_("code",[e._v("object store")]),e._v("的名字\n"),_("ul",[_("li",[_("code",[e._v("idb.objectStoreNames.contains(storeName)")]),e._v("判断是否存在"),_("code",[e._v("object store")])])])]),e._v(" "),_("li",[_("code",[e._v("onabort")]),e._v(" 事务中止的监听函数")]),e._v(" "),_("li",[_("code",[e._v("onclose")]),e._v(" 数据库意外关闭的监听函数")]),e._v(" "),_("li",[_("code",[e._v("onerror")])]),e._v(" "),_("li",[_("code",[e._v("onversionchange")]),e._v("数据库版本变化时触发（发生"),_("code",[e._v("upgradeneeded")]),e._v("事件，或调用"),_("code",[e._v("indexedDB.deleteDatabase()")]),e._v("）")]),e._v(" "),_("li",[_("code",[e._v("close()")]),e._v("关闭数据库连接，实际会等所有事务完成后再关闭")]),e._v(" "),_("li",[_("code",[e._v("createObjectStore(storeName, options)")]),e._v("创建"),_("code",[e._v("object store")]),e._v("仓库，返回一个"),_("code",[e._v("IDBObjectStore")]),e._v("对象\n"),_("ul",[_("li",[e._v("该方法只能在"),_("code",[e._v("versionchange")]),e._v("事件中调用")]),e._v(" "),_("li",[_("code",[e._v("options")]),e._v("为一个对象，包含"),_("code",[e._v("keyPath")]),e._v(" 和"),_("code",[e._v("autoIncrement")])])])]),e._v(" "),_("li",[_("code",[e._v("deleteObjectStore()")]),e._v("删除指定的对象仓库\n"),_("ul",[_("li",[e._v("只能在"),_("code",[e._v("versionchange")]),e._v("事件中调用")])])]),e._v(" "),_("li",[_("code",[e._v("transaction()")]),e._v("返回一个"),_("code",[e._v("IDBTransaction")]),e._v("事物对象\n"),_("ul",[_("li",[_("code",[e._v("IDBTransaction")]),e._v("对象下的"),_("code",[e._v("objectStore")]),e._v("返回一个"),_("code",[e._v("IDBObjectStore")]),e._v("对象")])])])])]),e._v(" "),_("li",[_("code",[e._v("IDBObjectStore")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("indexNames")]),e._v("返回一个类似数组的对象")]),e._v(" "),_("li",[_("code",[e._v("keyPath")]),e._v("返回当前对象仓库的主键")]),e._v(" "),_("li",[_("code",[e._v("name")]),e._v("当前对象仓库的名称")]),e._v(" "),_("li",[_("code",[e._v("autoIncrement")]),e._v("表示主键是否会自动递增")]),e._v(" "),_("li",[_("code",[e._v("transaction")]),e._v("返回当前对象仓库所属的事物对象")]),e._v(" "),_("li",[_("code",[e._v("add(value,key)")]),e._v("数据添加方法")]),e._v(" "),_("li",[_("code",[e._v("put(value,key)")]),e._v("更新方法")]),e._v(" "),_("li",[_("code",[e._v("clear()")]),e._v("删除当前对象仓库的所有记录，该方法不需要参数")]),e._v(" "),_("li",[_("code",[e._v("delete(key)")]),e._v("删除质地等主键的记录")]),e._v(" "),_("li",[_("code",[e._v("count(key)")]),e._v("返回计算记录的数量。不带参数是，该方法返回对象仓库记录的所有记录数量。如果主键或者"),_("code",[e._v("IDBKeyRequest")]),e._v("对象作为参数，则返回对应的记录数量。")])])]),e._v(" "),_("li",[e._v("更多API简介请查看"),_("a",{attrs:{href:"https://wangdoc.com/javascript/bom/indexeddb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("网道"),_("OutboundLink")],1)])]),e._v(" "),_("h3",{attrs:{id:"资源汇总"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#资源汇总"}},[e._v("#")]),e._v(" 资源汇总")]),e._v(" "),_("p",[_("strong",[e._v("以下网址请根据顺序阅读。如果有一定基础可以直接去看MDN文档或者去github中找indexedDB相关的开源仓库食用")])]),e._v(" "),_("p",[_("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/indexeddb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("阮一峰"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://wangdoc.com/javascript/bom/indexeddb.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("网道"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB",target:"_blank",rel:"noopener noreferrer"}},[e._v("MDN"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("strong",[e._v("比较推荐的开源仓库")])]),e._v(" "),_("p",[_("a",{attrs:{href:"https://localforage.github.io/localForage/",target:"_blank",rel:"noopener noreferrer"}},[e._v("localForage"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"http://www.dexie.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("dexie.js"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://pouchdb.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PouchDB"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://www.npmjs.com/package/idb",target:"_blank",rel:"noopener noreferrer"}},[e._v("idb"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://www.npmjs.com/package/idb-keyval",target:"_blank",rel:"noopener noreferrer"}},[e._v("idb-keyval"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://jsstore.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("JsStore"),_("OutboundLink")],1),e._v("、"),_("a",{attrs:{href:"https://github.com/google/lovefield",target:"_blank",rel:"noopener noreferrer"}},[e._v("lovefield"),_("OutboundLink")],1)]),e._v(" "),_("h2",{attrs:{id:"踩坑记录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#踩坑记录"}},[e._v("#")]),e._v(" 踩坑记录")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("onupgradeneeded")]),e._v(" 事件在较新的浏览器中有实现，需要测试哪些支持( Chrome 23+ 、Opera 17+ 以及 IE 10+ 支持)。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("IDBTransaction.READ_WRITE")]),e._v(" 可以支持旧版本事物"),_("code",[e._v("readwrite")]),e._v("模式")])]),e._v(" "),_("li",[_("p",[e._v("未指定事物模式(mode)时，默认为 "),_("code",[e._v("readonly")]),e._v(" 模式")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("versionchange")]),e._v(" 事务中进行新建或删除对象仓库或索引")])]),e._v(" "),_("li",[_("p",[e._v("事务三种模式: "),_("code",[e._v("readonly")]),e._v("、"),_("code",[e._v("readwrite")]),e._v("、"),_("code",[e._v("versionchange")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("autoIncrement")]),e._v(" 开启键生成器. 默认不开启。")])]),e._v(" "),_("li",[_("p",[e._v("只能在 "),_("code",[e._v("onupgradeneeded")]),e._v(" 中修改数据库结构，比如: 创建/删除对象存储空间、构建和删除索引")])]),e._v(" "),_("li",[_("p",[e._v("错误事件遵循冒泡机制。 如果不想对每个事务进行错误处理，可以在数据库对象这层处理(错误最终到达的地方)")])]),e._v(" "),_("li",[_("p",[e._v("当前数据库不存在，或者版本升级会触发"),_("code",[e._v("onupgradeneeded")]),e._v("事件")])]),e._v(" "),_("li",[_("p",[e._v("在"),_("code",[e._v("open")]),e._v(" 操作的时候"),_("code",[e._v("onupgradeneeded")]),e._v("事件与"),_("code",[e._v("onsuccess")]),e._v("事件的触发顺序")]),e._v(" "),_("ul",[_("li",[e._v("如果触发了"),_("code",[e._v("onupgradeneeded")]),e._v(" 事件，那么会优先触发"),_("code",[e._v("onupgradeneeded")]),e._v("事件。之后在"),_("code",[e._v("onsuccess")])]),e._v(" "),_("li",[e._v("无论是否走不走"),_("code",[e._v("onupgradeneeded")]),e._v("事件, 最终都会走"),_("code",[e._v("onsuccess")]),e._v("事件。而真正标志着"),_("code",[e._v("open")]),e._v("结束也是在"),_("code",[e._v("onsuccess")]),e._v("函数中进行通知。")]),e._v(" "),_("li",[e._v("所以根据上述结论，如果在"),_("code",[e._v("open")]),e._v("之后进行"),_("code",[e._v("readwrite")]),e._v("操作，请一定要在"),_("code",[e._v("onsuccess")]),e._v("之后"),_("code",[e._v("readwrite")])])])]),e._v(" "),_("li",[_("p",[e._v("如何新增的时候，如何判断数据是否已经存在？")]),e._v(" "),_("ul",[_("li",[e._v("解析错误信息，根据错误信息调用"),_("code",[e._v("put")]),e._v("方法")]),e._v(" "),_("li",[e._v("判断主"),_("code",[e._v("key")]),e._v("的方式")])])])]),e._v(" "),_("h2",{attrs:{id:"小程序和小程序webview"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#小程序和小程序webview"}},[e._v("#")]),e._v(" 小程序和小程序WebView")]),e._v(" "),_("ul",[_("li",[e._v("小程序的存储是小程序官方提供的API，大小限制在10MB。在小程序中，目前没有类似IndexedDB的存储方案。")]),e._v(" "),_("li",[e._v("需要测试在小程序webview中的支持情况")])]),e._v(" "),_("h2",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),_("ul",[_("li",[e._v("IndexedDB可以存储大量的结构化数据(文件/二进制大型对象blobs)")]),e._v(" "),_("li",[e._v("IndexedDB是异步操作，使用索引进行高性能的数据搜索。对比"),_("code",[e._v("LocalStorage")]),e._v("和"),_("code",[e._v("SessionStorage")]),e._v("，有较好的性能优势\n"),_("ul",[_("li",[e._v("其一：不会阻塞JS执行，而"),_("code",[e._v("LocalStorage")]),e._v("和"),_("code",[e._v("SessionStorage")]),e._v("都是同步操作")]),e._v(" "),_("li",[e._v("其二：针对某条数据查找可以直接使用索引来查找。而"),_("code",[e._v("LocalStorage")]),e._v("和"),_("code",[e._v("SessionStorage")]),e._v("查找某条数据需要自行写"),_("code",[e._v("JS逻辑处理")])]),e._v(" "),_("li",[e._v("其三: "),_("code",[e._v("Cookie")]),e._v("、"),_("code",[e._v("LocalStorage")]),e._v("、"),_("code",[e._v("SessionStorage")]),e._v("的存储大小限制较大。并且所存储的数据需要序列化为字符串，而"),_("code",[e._v("IndexedDB")]),e._v("不会")])])]),e._v(" "),_("li",[_("code",[e._v("WebSQL")]),e._v("与"),_("code",[e._v("IndexDB")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("WebSQL")]),e._v("兼容性太差，主流浏览器只有谷歌支持。"),_("code",[e._v("IndexedDB")]),e._v("兼容性方面现代主流浏览器都支持")]),e._v(" "),_("li",[_("code",[e._v("WebSQL")]),e._v("没有纳入web标准, 而"),_("code",[e._v("IndexedDB")]),e._v("是被纳入web标准的")]),e._v(" "),_("li",[_("code",[e._v("WebSQL")]),e._v("的存储是临时性的存储，比如浏览器刷新那么之前存储的数据会丢失(技术文章中看到的,具体没有验证。感兴趣的可以验证下)。而"),_("code",[e._v("IndexedDB")]),e._v("是持久化存储，用户不手动清除数据。那么数据则永远存在")])])]),e._v(" "),_("li",[_("code",[e._v("IndexedDB")]),e._v("是同源策略, 即同个域名下的网页可以访问该域名下的"),_("code",[e._v("IndexedDB")]),e._v("存储的数据。不同域名之间的"),_("code",[e._v("IndexedDB")]),e._v("数据不会访问")]),e._v(" "),_("li",[_("code",[e._v("transaction")]),e._v("(事务对象) 方法传入的数据库名称可以传入"),_("code",[e._v("string")]),e._v("或者"),_("code",[e._v("Arrary<string>")])])]),e._v(" "),_("h2",{attrs:{id:"已知问题待测试验证"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#已知问题待测试验证"}},[e._v("#")]),e._v(" 已知问题待测试验证")]),e._v(" "),_("ul",[_("li",[e._v("IndexedeDB的第一次调用会询问用户是否可以使用？")]),e._v(" "),_("li",[_("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/IndexedDB_API/Using_IndexedDB",target:"_blank",rel:"noopener noreferrer"}},[e._v("IndexedDB 在浏览器的隐私模式（Firefox 的 Private Browsing 模式和 Chrome 的 Incognito 模式）下是被完全禁止的。 隐私浏览的全部要点在于不留下任何足迹，所以在这种模式下打开数据库的尝试就失败了。"),_("OutboundLink")],1)]),e._v(" "),_("li",[e._v("作用域概念？ ("),_("code",[e._v("只是个人理解，未验证。可以当作参考: )")]),e._v(")\n"),_("ul",[_("li",[e._v("目前的理解为：用事务打开的对象仓库为一个作用域.\n"),_("ul",[_("li",[e._v("示例一：如果一个事务打开：a对象仓库和b对象仓库。那么a和b拥有同一个作用域，可以并行"),_("code",[e._v("readonly")]),e._v("，不能并行"),_("code",[e._v("readwrite")])]),e._v(" "),_("li",[e._v("示例二：如果A事务打开打开a对象仓库，B事务打开b对象仓库。那么a单独拥有一个作用域，b也单独拥有一个作用。所以，是可以同时对a和b"),_("code",[e._v("readwrite")]),e._v("，但是不能对a同时进行多个"),_("code",[e._v("readwrite")]),e._v("。而"),_("code",[e._v("readonly")]),e._v("在任何情况下都可以并行。")])])])])]),e._v(" "),_("li",[_("code",[e._v("onversionchange")]),e._v("用法以及使用场景？")]),e._v(" "),_("li")])])}),[],!1,null,null,null);v.default=r.exports}}]);