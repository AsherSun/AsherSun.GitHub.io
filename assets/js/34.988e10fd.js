(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{531:function(t,e,v){"use strict";v.r(e);var _=v(4),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"微前端出现背景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端出现背景"}},[t._v("#")]),t._v(" 微前端出现背景")]),t._v(" "),v("p",[t._v("微前端的发展，并不是凭空出现的。随着最初的项目在不断发展过程中积累为巨石应用，而这些巨石应用就会伴随着很多问题.")]),t._v(" "),v("h3",{attrs:{id:"工程膨胀"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#工程膨胀"}},[t._v("#")]),t._v(" 工程膨胀")]),t._v(" "),v("p",[t._v("随着应用添加越来越多的功能，会导致项目越来越大。而项目一大就会影响开发速度(本地服务的编译打包时间、需求发布时的打包时间)。随着业务的复杂度提升，在某些场景下的打包会加越来越多的环境变量判断，从而导致应用打包的配置逻辑会越来越臃肿")]),t._v(" "),v("h3",{attrs:{id:"分支混乱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分支混乱"}},[t._v("#")]),t._v(" 分支混乱")]),t._v(" "),v("p",[t._v("当多人协作开发，或者多团队协作开发时。在一个项目中会有可能导致分支混乱，而且经常性会出现代码冲突，或者是由于修改公共组件引发的bug。")]),t._v(" "),v("p",[t._v("项目由多团队协同开发的时候，可能存在需求依赖关系，即一个功能需要等其他团队开发好之后，才能接着开发下个功能。")]),t._v(" "),v("h3",{attrs:{id:"维护困难"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#维护困难"}},[t._v("#")]),t._v(" 维护困难")]),t._v(" "),v("p",[t._v("随着时间的推移，长时间下，一个巨石项目会存在遗留模块、代码组织结构太老等诸多维护性问题，有时候开发一个新的功能，为了兼容他，限制了整个项目的发展。")]),t._v(" "),v("p",[t._v("如果项目开发人员流动太大，一些祖传代码难以维护，一般人都不想去修改。或者修改某个小模块，项目在发布时是全量发布，也可能导致该项目挂掉")]),t._v(" "),v("h2",{attrs:{id:"微前端是什么-能做什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端是什么-能做什么"}},[t._v("#")]),t._v(" 微前端是什么？能做什么？")]),t._v(" "),v("p",[t._v("很明显，微前端可以解决上文中描述的各种场景问题。当然，也不止这些。")]),t._v(" "),v("h3",{attrs:{id:"微前端是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端是什么"}},[t._v("#")]),t._v(" 微前端是什么")]),t._v(" "),v("p",[t._v("微前端是由一个个微应用来组成一个巨石应用，而这些微应用之间的代码是可以相互隔离(JS运行沙箱、CSS代码隔离)，也可以共用同一份数据、复用相同业务逻辑")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AsherSun/image-host/blog-img/20210727165222.jpg",alt:"微前端架构示意图"}})]),t._v(" "),v("h3",{attrs:{id:"微前端能做啥"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端能做啥"}},[t._v("#")]),t._v(" 微前端能做啥")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("简单、松耦合的代码库")])]),t._v(" "),v("ul",[v("li",[t._v("微前端架构倾向于编写和维护更小、更简单、更容易开发的项目")]),t._v(" "),v("li",[t._v("技术栈无关，由一个巨石应用可以拆分为各个小项目后，可以在小项目中使用任何技术栈")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("增量升级")])]),t._v(" "),v("ul",[v("li",[t._v("支持渐进式重构，先让新旧代码和谐共存，在逐步转化旧代码，知道整个重构完成")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("独立部署")])]),t._v(" "),v("ul",[v("li",[t._v("每一个子应用都具备独立开发，持续部署，独立运行的能力。")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("团队自治")])]),t._v(" "),v("ul",[v("li",[t._v("各子项目之间不存在依赖关系，保持隔离(js运行沙箱、css隔离)。")]),t._v(" "),v("li",[t._v("单一职责，每个子项目只做和自己相关的业务工作。")])])])]),t._v(" "),v("h2",{attrs:{id:"落地场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#落地场景"}},[t._v("#")]),t._v(" 落地场景")]),t._v(" "),v("p",[t._v("在实际项目中，如果遇到以下问题，可以考虑使用微前端")]),t._v(" "),v("ol",[v("li",[t._v("项目太大，成为了典型的巨石应用，打包很慢。")]),t._v(" "),v("li",[t._v("项目开发者太多，多个同学开发同一套代码，经常出现代码冲突、或修改公共组件引发的 Bug。")]),t._v(" "),v("li",[t._v("项目太老，存在遗留模块，为了兼容它，限制了整个项目的发展。")]),t._v(" "),v("li",[t._v("项目技术栈不统一，使用了多种不同框架，每一种框架又有多个版本共存的情况。")]),t._v(" "),v("li",[t._v("项目由多个团队协同开发，一个功能需要等其他团队开发好之后，才能接着开发。")]),t._v(" "),v("li",[t._v("项目每次发布都是全量发布，即使是上线一个小模块，也可能导致整个项目挂掉。")]),t._v(" "),v("li",[t._v("项目由多个系统组成，完成一个功能需要不断地跳转多个系统页。")]),t._v(" "),v("li",[t._v("项目开发人员流动大，存在一些祖传代码难以维护，一般人都不好改。")]),t._v(" "),v("li",[t._v("项目需要一些试验田方案，即需要在某些模块做一些新技术尝试、框架升级等。")]),t._v(" "),v("li",[t._v("...")])]),t._v(" "),v("h2",{attrs:{id:"微前端存在的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端存在的问题"}},[t._v("#")]),t._v(" 微前端存在的问题")]),t._v(" "),v("p",[t._v("当然，微前端也不是万能的，它也存在以下问题")]),t._v(" "),v("ul",[v("li",[t._v("拆分的粒度越小，便意味着架构变得复杂、维护成本变高。")]),t._v(" "),v("li",[t._v("技术栈一旦多样化，便意味着技术栈混乱。")]),t._v(" "),v("li",[t._v("管理版本复杂、依赖复杂。")]),t._v(" "),v("li",[t._v("开发体验不太友好，开发时可能需要同时启动多个项目。")])]),t._v(" "),v("p",[t._v("这些问题大多是因为项目拆分成多个项目之后，引发的沟通协作问题")]),t._v(" "),v("h2",{attrs:{id:"微前端的技术演变"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端的技术演变"}},[t._v("#")]),t._v(" 微前端的技术演变")]),t._v(" "),v("h3",{attrs:{id:"以前的微前端方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#以前的微前端方案"}},[t._v("#")]),t._v(" 以前的微前端方案")]),t._v(" "),v("p",[t._v("在前端没有出现MV*和打包工具之前，对于巨石应用的微前端方案")]),t._v(" "),v("h4",{attrs:{id:"路由分发式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由分发式"}},[t._v("#")]),t._v(" 路由分发式")]),t._v(" "),v("ul",[v("li",[t._v("通过http服务其的反向代理功能，将请求路由到对应的应用上。")]),t._v(" "),v("li",[t._v("这种方式只是在路由层面看起来是一个项目，但实际上只是通过a标签连接了多个项目。")]),t._v(" "),v("li",[t._v("或者直接拆分巨石应用，由a标签来连接多个项目。")])]),t._v(" "),v("h4",{attrs:{id:"前端容器化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端容器化"}},[t._v("#")]),t._v(" 前端容器化")]),t._v(" "),v("ul",[v("li",[t._v("使用 iframe 作为容器")]),t._v(" "),v("li",[t._v("seo 不友好。")]),t._v(" "),v("li",[t._v("需要考虑同源策略 cookie 管理。")]),t._v(" "),v("li",[t._v("需要自建一套应用管理、应用通信机制。")]),t._v(" "),v("li",[t._v("弹窗不友好。")]),t._v(" "),v("li",[t._v("浏览器后退按钮不友好。")])]),t._v(" "),v("h3",{attrs:{id:"现代微前端方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#现代微前端方案"}},[t._v("#")]),t._v(" 现代微前端方案")]),t._v(" "),v("h4",{attrs:{id:"前端微服务化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端微服务化"}},[t._v("#")]),t._v(" 前端微服务化")]),t._v(" "),v("ul",[v("li",[t._v("在不同的框架之上设计通讯、加载机制，以在一个页面内加载对应的应用。")]),t._v(" "),v("li",[t._v("常用的框架：qiankun，single-spa 都是这样做的。")]),t._v(" "),v("li",[t._v("最常用的方案，适合于快速上手。")])]),t._v(" "),v("h4",{attrs:{id:"微件化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微件化"}},[t._v("#")]),t._v(" 微件化")]),t._v(" "),v("ul",[v("li",[t._v("打包出可以直接嵌入在页面上运行的代码，可能是一段 js，使用时直接引入即可。")]),t._v(" "),v("li",[t._v("需要实现一套微件管理机制，成本太高。")])]),t._v(" "),v("h4",{attrs:{id:"微应用化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微应用化"}},[t._v("#")]),t._v(" 微应用化")]),t._v(" "),v("ul",[v("li",[t._v("通过软件工程的方式，在部署构建环境中通过 webpack 打包，组合多个独立应用成一个单体应用。")]),t._v(" "),v("li",[t._v("需要将多个项目打包成一个，所以技术栈需要保持统一。")])]),t._v(" "),v("h4",{attrs:{id:"应用组件化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#应用组件化"}},[t._v("#")]),t._v(" 应用组件化")]),t._v(" "),v("ul",[v("li",[t._v("将子项目都打包成 webComponent，在主项目中组合。")]),t._v(" "),v("li",[t._v("需要考虑 webComponent 兼容性。")])]),t._v(" "),v("h3",{attrs:{id:"各方案的优缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#各方案的优缺点"}},[t._v("#")]),t._v(" 各方案的优缺点")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[t._v("方式")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("开发成本")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("维护成本")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("可行性")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("同一框架要求")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("实现难度")]),t._v(" "),v("th",{staticStyle:{"text-align":"center"}},[t._v("潜在风险")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("路由分发")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("这个方案太普通了")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("iFrame")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("这个方案太普通了")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("应用微服务化")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("中")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆☆☆☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("针对每个框架做定制及Hook")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("微件化")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("中")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆☆☆☆☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("针对构建系统，如webpack进行hack")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("微应用化")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("中")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("中")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆☆☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("统一不同应用的构建规范")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("纯Web Components")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("是")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("新技术，浏览器兼容问题")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"center"}},[t._v("结合Web Components")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("低")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("高")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("否")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("☆☆")]),t._v(" "),v("td",{staticStyle:{"text-align":"center"}},[t._v("新技术，浏览器兼容问题")])])])]),t._v(" "),v("p",[v("strong",[t._v("这么多方案，各有利弊，我们应该如何选择呢？")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("如果只是想简单快速的做分离，不考虑 seo，可以用 iframe。")])]),t._v(" "),v("li",[v("p",[t._v("如果想做分离的同时，保持良好的单页体验，可以考虑 single-spa、qiankun 框架。")])]),t._v(" "),v("li",[v("p",[t._v("如果公司有很强的技术能力，再考虑自研或其他方案。")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);