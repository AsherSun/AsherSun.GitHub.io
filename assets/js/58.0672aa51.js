(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{555:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("技术栈提示")]),t._v(" "),a("ul",[a("li",[t._v("背景中所描述的场景使用的技术栈为: "),a("code",[t._v("React + antd + umi生态")]),t._v(", 只说明一次，后文中不再出现")]),t._v(" "),a("li",[t._v("文中所描述的一些示例地址在"),a("a",{attrs:{href:"https://github.com/AsherSun/antd-edit-table-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),a("OutboundLink")],1),t._v("，如果对示例感兴趣的同学可以动动手指点个start")])])]),t._v(" "),a("h2",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("p",[t._v("在一次业务开发中需要使用表格来编辑一些数据，于是乎便用了"),a("code",[t._v("antd")]),t._v("周边生态的"),a("code",[t._v("ProTable")]),t._v("，"),a("code",[t._v("ProTable")]),t._v("中有提供"),a("code",[t._v("EditProTable")]),t._v("的组件和示例代码。"),a("code",[t._v("EditProTable")]),t._v("是针对表格编辑的场景下封装的编辑表格组件，如果在编辑数据不需要受控的情况下，那么"),a("code",[t._v("EditProTable")]),t._v("是没有问题的。如果在数据需要受控，并根据编辑的数据信息去额外计算一些数据渲染到表格的某一行某一列中，那么"),a("code",[t._v("EditProTable")]),t._v("提供的编辑组件，在用户的角度来使用是及其卡顿的。数据量稍微大一些的情况下都有可能直接渲染崩溃。为什么"),a("code",[t._v("EditProTable")]),t._v("在数据受控模式时会这么卡顿呢？遇到这种情况，应该怎么去优化性能？让我们带着疑问去阅读这篇React性能优化之旅的文章")]),t._v(" "),a("h2",{attrs:{id:"react中的性能优化该怎么优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react中的性能优化该怎么优化"}},[t._v("#")]),t._v(" React中的性能优化该怎么优化？")]),t._v(" "),a("p",[t._v("可能有些小伙伴有阅读过一些"),a("code",[t._v("react")]),t._v("性能优化的文章或者指南，通常这些文章会占用极大的篇幅来介绍"),a("code",[t._v("React")]),t._v("底层原理，最后几句话来概括"),a("code",[t._v("react")]),t._v("性能优化的方式。了解原理是很重要的，但是我比较直接，所以我直接用一句话来概括"),a("code",[t._v("react")]),t._v("的性能优化。那么这句话则是: "),a("strong",[t._v("尽可能的减少"),a("code",[t._v("render")]),t._v("渲染")])]),t._v(" "),a("p",[a("strong",[t._v("尽可能的减少render渲染")]),t._v("，是因为"),a("code",[t._v("react")]),t._v("、"),a("code",[t._v("vue")]),t._v("等框架都是数据驱动视图更新。那么如果在一个有几百上千的列表视图下，列表中的某一行的数据更新了，是一次性重新渲染这几百上千条列表数据？还是只单独更新数据改变这一行"),a("code",[t._v("DOM")]),t._v("节点？答案显而易见，当然会选择只更新一行"),a("code",[t._v("DOM")]),t._v("节点的方式。")]),t._v(" "),a("p",[t._v("可惜，"),a("code",[t._v("antd")]),t._v("周边生态提供的"),a("code",[t._v("Table、EditProTable")]),t._v("组件都是一次性重新渲染表格。")]),t._v(" "),a("p",[t._v("这里稍微提一嘴，如果单独去对比"),a("code",[t._v("React")]),t._v("框架和"),a("code",[t._v("vue")]),t._v("框架的性能，那么"),a("code",[t._v("Vue")]),t._v("的性能是好于"),a("code",[t._v("react")]),t._v("的。其原因是"),a("code",[t._v("vue")]),t._v("使用的"),a("code",[t._v("<Template>")]),t._v("开发方式，在vue编译的过程中是可以对"),a("code",[t._v("<Template>")]),t._v("做很多性能优化的判断。而"),a("code",[t._v("react")]),t._v("的性能表现之所以不如"),a("code",[t._v("vue")]),t._v("，是因为"),a("code",[t._v("react")]),t._v("的"),a("code",[t._v("JSX")]),t._v("开发方式太灵活了，很难去针对"),a("code",[t._v("JSX")]),t._v("做单独的性能优化判断。"),a("code",[t._v("react")]),t._v("不是没有尝试去优化过框架的性能表现，但最终是没有对"),a("code",[t._v("JSX")]),t._v("做性能优化，而是提出了"),a("code",[t._v("Fiber")]),t._v("概念来优化框架的性能表现。"),a("code",[t._v("Fiber")]),t._v("的原理一句话概括: "),a("strong",[t._v("将JS的长任务切割为一个个微任务，在浏览器FPS的时候去执行微任务。解决了并不会因为该js长任务执行时间过长而阻塞后续任务")])]),t._v(" "),a("p",[t._v("当然，这篇文章并不是在探讨"),a("code",[t._v("react")]),t._v("源码、"),a("code",[t._v("vue")]),t._v("源码。而是记录一下在"),a("code",[t._v("react")]),t._v("中优化性能的旅途，所以收回正题。")]),t._v(" "),a("h2",{attrs:{id:"table、editprotable组件的原罪"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table、editprotable组件的原罪"}},[t._v("#")]),t._v(" Table、EditProTable组件的原罪")]),t._v(" "),a("p",[t._v("首先，"),a("code",[t._v("antd")]),t._v("的"),a("code",[t._v("Table")]),t._v("组件犯了懒惰之罪。这个问题不是没有抛出来，而是抛出来，但是官方没有针对表格编辑的场景下去优化这个问题。"),a("code",[t._v("antd")]),t._v("团队提供的"),a("code",[t._v("EditProTable")]),t._v("还是存在这个问题... 那就只能证明他们是真的懒")]),t._v(" "),a("h3",{attrs:{id:"具体的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体的问题"}},[t._v("#")]),t._v(" 具体的问题")]),t._v(" "),a("p",[t._v("我们使用浏览器的性能分析页面可以得知导致卡顿的具体原因，下图是用"),a("code",[t._v("Table")]),t._v("表格在编辑场景下的性能分析图\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AsherSun/image-host/blog-img/20210719174010.png",alt:"table的编辑场景下"}}),t._v("\n在图上可以看到三块黄色的区域，黄色表示的是"),a("code",[t._v("js")]),t._v("执行时间。那么最显著的问题是"),a("code",[t._v("js")]),t._v("执行太长了，只改了一个输入框的内容，就要执行1s秒左右的"),a("code",[t._v("js")]),t._v("逻辑。")]),t._v(" "),a("p",[t._v("而导致"),a("code",[t._v("js")]),t._v("执行这么长时间的问题，则是"),a("code",[t._v("table")]),t._v("组件只要检测到数据源列表有更新，就会去重新渲染表格。而表格的cloumns中的"),a("code",[t._v("render")]),t._v("方法都会重新执行一次。因为"),a("code",[t._v("table")]),t._v("的每一行(row)的"),a("code",[t._v("js")]),t._v("计算逻辑是"),a("code",[t._v("DataSource.map((row) => columns.map((column) => Column_ReactNode))")]),t._v("。所需要的时间就是"),a("code",[t._v("2n(o)")])]),t._v(" "),a("p",[t._v("所以，当数据量只有十几条、几十条的时候并不会感受到明显卡顿，因为渲染十几条数据并不会需要太 长时间，如果，数据多起来了呢？几百条数据、几千条数据呢？这种大数据的情况下，所有数据重新渲染，那么渲染成本是极高的。正确的方式是哪一条数据更改了，就只渲染这一条数据对应的"),a("code",[t._v("DOM")]),t._v("节点就可以了。如果只渲染对应更改的某一条数据，那么所需时间就是"),a("code",[t._v("n(o)")])]),t._v(" "),a("h2",{attrs:{id:"解决过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决过程"}},[t._v("#")]),t._v(" 解决过程")]),t._v(" "),a("p",[t._v("具体场景为：数据需要受控，我需要根据用户的输入信息来计算一些差值用于显示在表格的某一行某一列中。")]),t._v(" "),a("p",[t._v("当在测试环境中，由大量编辑数据触发这个性能问题的时候。想到的第一个方案便是"),a("code",[t._v("Input")]),t._v("输入组件上的"),a("code",[t._v("onChange")]),t._v("事件去掉。这样就避免了用户每输入一个字符，就需要重新渲染这几百条编辑数据的逻辑。")]),t._v(" "),a("h3",{attrs:{id:"临上线前的妥协方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#临上线前的妥协方案"}},[t._v("#")]),t._v(" 临上线前的妥协方案")]),t._v(" "),a("p",[t._v("如果去掉了"),a("code",[t._v("onChange")]),t._v("时间，那么用户的编辑数据我就接收不到了，该怎么办？由于上线时间点临近，只能和产品沟通先选择一种妥协方案，那就是当"),a("code",[t._v("Input")]),t._v("组件失去焦点的时候再去计算相关信息。")]),t._v(" "),a("p",[t._v("这样虽然解决了输入过程中的卡顿问题，但是用户如果去下一行进行编辑在短时间内是无法响应用户的交互的。其原因是表格组件重新渲染了呀，而且渲染所需要的时间又比较长，用户大概等1s~2s(具体时间视数据量而定)。")]),t._v(" "),a("p",[t._v("所以这个问题最终只解决了一半，并没有完全解决"),a("code",[t._v("table")]),t._v("组件重新渲染所有行的情况。")]),t._v(" "),a("h3",{attrs:{id:"最终的解决方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最终的解决方式"}},[t._v("#")]),t._v(" 最终的解决方式")]),t._v(" "),a("p",[t._v("对于追求丝滑的web交互的开发者来说，这种卡顿的情况是决不允许的。所以，自己便在每天晚上下班的时候，针对表格编辑的场景重新实现了一个"),a("code",[t._v("EditTable")]),t._v("。自己实现的版本则是某一条数据更新那么就只会渲染对应的这条数据的"),a("code",[t._v("DOM")]),t._v("节点。")]),t._v(" "),a("p",[t._v("其核心代码如下")]),t._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义每一行(row)的刷新方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setRefresh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" useState"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("();\nconst onRenderChange = useCallback(\n  (key: string, event: any, renderDom) => ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果有外部传入Input等组件，那么则调用外部Input组件上定义的onChange方法")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderDom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" renderDom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFunction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("renderDom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onChange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      renderDom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onChange")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isObject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 触发每一个行(row)的刷新")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onRefresh")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v(",\n  [onRefresh, record],\n);\n\nreturn (\n  // 省略jsx逻辑\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n    ")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      record "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" record"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dataIndex "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      record"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将每一行(row)定义的刷新方法抛给外部使用")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" onRefresh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  ")]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token plain-text"}},[t._v("\n  // 省略jsx逻辑\n);\n")])])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("p",[t._v("自己实现的"),a("code",[t._v("EditTable")]),t._v("组件，完全解决了"),a("code",[t._v("antd table")]),t._v("组件的在每次数据更新的时候重新渲染整个表格的问题。所以，无论在数据量有多少条的情况下，都不会在编辑的过程中感受到卡顿。")]),t._v(" "),a("p",[t._v("最后，来看下浏览器的性能面板分析\n"),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/AsherSun/image-host/blog-img/20210719182327.png",alt:"EditTalbe"}}),t._v("\n可以看到，黄色所表示的"),a("code",[t._v("js")]),t._v("执行时间基本很少了... 因为每次修改只渲染了一条数据，一行"),a("code",[t._v("DOM")]),t._v("节点。完美")]),t._v(" "),a("h2",{attrs:{id:"延伸"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延伸"}},[t._v("#")]),t._v(" 延伸")]),t._v(" "),a("p",[t._v("上面只是对编辑过程中的表格渲染的优化，而表格每次初始化的情况下也是存在需要占用"),a("code",[t._v("2n(o)")]),t._v("的时间问题的。那么这个问题有没有解决方式呢？最常见的解决方案是虚拟滚动方案。")]),t._v(" "),a("p",[t._v("其虚拟滚动的实现原理则是一次性不会全部渲染所有数据到页面中，而是在可视区域内，只渲染可视区域内需要用到的数据即可。那么这种方式下，即使数据有几万条，在表格初始化的情况下，也只是渲染了可视区域内的几十条数据而已。 剩下的数据，都还没有渲染到浏览器中。")]),t._v(" "),a("p",[t._v("而我目前的工作中的实际业务场景中并没有多到一次性编辑几万条数据的情况，所以并没有加虚拟滚动的逻辑。加这个逻辑还是挺简单的，"),a("code",[t._v("react")]),t._v("生态中有提供解决方案和"),a("code",[t._v("NPM")]),t._v("包。"),a("code",[t._v("antd")]),t._v("组件库的示例中也有虚拟列表的"),a("code",[t._v("DEMO")])]),t._v(" "),a("h2",{attrs:{id:"勘误"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#勘误"}},[t._v("#")]),t._v(" 勘误")]),t._v(" "),a("p",[t._v("写在最后的话")]),t._v(" "),a("p",[t._v("文中可能会有错别字、病句等。如果有发现的朋友多多提示我下。")]),t._v(" "),a("p",[t._v("针对"),a("code",[t._v("antd")]),t._v("的"),a("code",[t._v("table")]),t._v("表格暴露出来的问题，我的解决思路如上，如果有其他解决思路的同学，可以多交流、交流呀。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("文中代码仓库")]),t._v(" "),a("p",[t._v("文中所说的"),a("code",[t._v("Table")]),t._v("、"),a("code",[t._v("EditProTable")]),t._v("和"),a("code",[t._v("EditTable")]),t._v("的代码示例在"),a("a",{attrs:{href:"https://github.com/AsherSun/antd-edit-table-demo",target:"_blank",rel:"noopener noreferrer"}},[t._v("github中"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);